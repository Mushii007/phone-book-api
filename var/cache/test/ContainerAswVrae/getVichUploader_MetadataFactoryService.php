<?php

namespace ContainerAswVrae;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getVichUploader_MetadataFactoryService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'vich_uploader.metadata_factory' shared service.
     *
     * @return \Metadata\MetadataFactory
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/jms/metadata/src/MetadataFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/jms/metadata/src/AdvancedMetadataFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/jms/metadata/src/MetadataFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/jms/metadata/src/Cache/CacheInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/jms/metadata/src/Cache/ClearableCacheInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/jms/metadata/src/Cache/FileCache.php';

        $container->privates['vich_uploader.metadata_factory'] = $instance = new \Metadata\MetadataFactory(($container->privates['vich_uploader.metadata_driver.chain'] ?? $container->load('getVichUploader_MetadataDriver_ChainService')), 'Metadata\\ClassHierarchyMetadata', true);

        $instance->setCache(($container->privates['vich_uploader.metadata.cache.file_cache'] ?? ($container->privates['vich_uploader.metadata.cache.file_cache'] = new \Metadata\Cache\FileCache(($container->targetDir.''.'/vich_uploader')))));

        return $instance;
    }
}
